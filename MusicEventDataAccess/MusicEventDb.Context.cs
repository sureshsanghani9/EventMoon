//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicEventDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MusicEventEntities : DbContext
    {
        public MusicEventEntities()
            : base("name=MusicEventEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Advertisement> Advertisements { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<EventDetail> EventDetails { get; set; }
        public virtual DbSet<EventUser> EventUsers { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupChat> GroupChats { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<MainCategory> MainCategories { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
        public virtual DbSet<SubEvent> SubEvents { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<Users_Groups> Users_Groups { get; set; }
        public virtual DbSet<EmailSubscriber> EmailSubscribers { get; set; }
        public virtual DbSet<NewEvent> NewEvents { get; set; }
    
        [DbFunction("MusicEventEntities", "fnNTextToIntTable")]
        public virtual IQueryable<fnNTextToIntTable_Result> fnNTextToIntTable(string data)
        {
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnNTextToIntTable_Result>("[MusicEventEntities].[fnNTextToIntTable](@Data)", dataParameter);
        }
    
        [DbFunction("MusicEventEntities", "fnNTextTostringTable")]
        public virtual IQueryable<fnNTextTostringTable_Result> fnNTextTostringTable(string data)
        {
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnNTextTostringTable_Result>("[MusicEventEntities].[fnNTextTostringTable](@Data)", dataParameter);
        }
    
        public virtual ObjectResult<string> AcceptDecline(Nullable<int> userId, Nullable<int> groupId, Nullable<bool> isapprove, string accesstoken, Nullable<int> adminuserId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var isapproveParameter = isapprove.HasValue ?
                new ObjectParameter("isapprove", isapprove) :
                new ObjectParameter("isapprove", typeof(bool));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            var adminuserIdParameter = adminuserId.HasValue ?
                new ObjectParameter("adminuserId", adminuserId) :
                new ObjectParameter("adminuserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AcceptDecline", userIdParameter, groupIdParameter, isapproveParameter, accesstokenParameter, adminuserIdParameter);
        }
    
        public virtual ObjectResult<string> ActivityList(Nullable<int> userid, Nullable<int> eventid, Nullable<int> pageNumber, Nullable<int> pageSize, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ActivityList", useridParameter, eventidParameter, pageNumberParameter, pageSizeParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddEventsFromMySql(string eventName, string latitude, string longitude, string location, string category, Nullable<System.DateTime> startDate, string startTime, string image, string ticketUrl, string description, Nullable<bool> isTmaster)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ticketUrlParameter = ticketUrl != null ?
                new ObjectParameter("ticketUrl", ticketUrl) :
                new ObjectParameter("ticketUrl", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var isTmasterParameter = isTmaster.HasValue ?
                new ObjectParameter("isTmaster", isTmaster) :
                new ObjectParameter("isTmaster", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddEventsFromMySql", eventNameParameter, latitudeParameter, longitudeParameter, locationParameter, categoryParameter, startDateParameter, startTimeParameter, imageParameter, ticketUrlParameter, descriptionParameter, isTmasterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddEventsFromSql(string eventName, string latitude, string longitude, string location, string category, Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, string startTime, string endtime, string image, string ticketUrl, string description, Nullable<bool> isTmaster, Nullable<int> masterEventID)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ticketUrlParameter = ticketUrl != null ?
                new ObjectParameter("ticketUrl", ticketUrl) :
                new ObjectParameter("ticketUrl", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var isTmasterParameter = isTmaster.HasValue ?
                new ObjectParameter("isTmaster", isTmaster) :
                new ObjectParameter("isTmaster", typeof(bool));
    
            var masterEventIDParameter = masterEventID.HasValue ?
                new ObjectParameter("masterEventID", masterEventID) :
                new ObjectParameter("masterEventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddEventsFromSql", eventNameParameter, latitudeParameter, longitudeParameter, locationParameter, categoryParameter, startDateParameter, enddateParameter, startTimeParameter, endtimeParameter, imageParameter, ticketUrlParameter, descriptionParameter, isTmasterParameter, masterEventIDParameter);
        }
    
        public virtual ObjectResult<Admin_AdvertiseList_Result> Admin_AdvertiseList(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> status)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_AdvertiseList_Result>("Admin_AdvertiseList", startdateParameter, enddateParameter, statusParameter);
        }
    
        public virtual ObjectResult<Admin_EventList_Result> Admin_EventList(Nullable<int> categoryId, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_EventList_Result>("Admin_EventList", categoryIdParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int Admin_EventList_Paging(string keyword, Nullable<int> categoryId, Nullable<System.DateTime> startDates, Nullable<System.DateTime> enddate, Nullable<int> pageNumber, Nullable<int> pageSize, string sortCol, string sortDir, Nullable<int> images)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var startDatesParameter = startDates.HasValue ?
                new ObjectParameter("startDates", startDates) :
                new ObjectParameter("startDates", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            var imagesParameter = images.HasValue ?
                new ObjectParameter("images", images) :
                new ObjectParameter("images", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_EventList_Paging", keywordParameter, categoryIdParameter, startDatesParameter, enddateParameter, pageNumberParameter, pageSizeParameter, sortColParameter, sortDirParameter, imagesParameter);
        }
    
        public virtual ObjectResult<Admin_GetCategoryList_Result> Admin_GetCategoryList(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_GetCategoryList_Result>("Admin_GetCategoryList", statusParameter);
        }
    
        public virtual int Admin_GetDashboardCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_GetDashboardCount");
        }
    
        public virtual ObjectResult<Admin_MainGetCategoryList_Result> Admin_MainGetCategoryList(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_MainGetCategoryList_Result>("Admin_MainGetCategoryList", statusParameter);
        }
    
        public virtual ObjectResult<Admin_UsersList_Result> Admin_UsersList(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_UsersList_Result>("Admin_UsersList", statusParameter);
        }
    
        public virtual int AdvertiseList(Nullable<int> pageNumber, Nullable<int> pageSize, string latitude, string longitude)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdvertiseList", pageNumberParameter, pageSizeParameter, latitudeParameter, longitudeParameter);
        }
    
        public virtual ObjectResult<applepushnotificationChat_Result> applepushnotificationChat(Nullable<int> userID, Nullable<int> groupid)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<applepushnotificationChat_Result>("applepushnotificationChat", userIDParameter, groupidParameter);
        }
    
        public virtual ObjectResult<AutoLogin_Result> AutoLogin(Nullable<int> userId, string mobileContact, string faceBookFriends, string deviceToken, string deviceType, string guid, string appname)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var mobileContactParameter = mobileContact != null ?
                new ObjectParameter("mobileContact", mobileContact) :
                new ObjectParameter("mobileContact", typeof(string));
    
            var faceBookFriendsParameter = faceBookFriends != null ?
                new ObjectParameter("faceBookFriends", faceBookFriends) :
                new ObjectParameter("faceBookFriends", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("deviceToken", deviceToken) :
                new ObjectParameter("deviceToken", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("deviceType", deviceType) :
                new ObjectParameter("deviceType", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutoLogin_Result>("AutoLogin", userIdParameter, mobileContactParameter, faceBookFriendsParameter, deviceTokenParameter, deviceTypeParameter, guidParameter, appnameParameter);
        }
    
        public virtual ObjectResult<string> CreateActivity(Nullable<int> activityid, Nullable<int> userID, Nullable<int> eventId, string activityName, string location, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string activityDescription, string imagepath, Nullable<System.TimeSpan> starttime, Nullable<System.TimeSpan> endtime, string latitude, string longitude, string accesstoken)
        {
            var activityidParameter = activityid.HasValue ?
                new ObjectParameter("activityid", activityid) :
                new ObjectParameter("activityid", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var activityDescriptionParameter = activityDescription != null ?
                new ObjectParameter("activityDescription", activityDescription) :
                new ObjectParameter("activityDescription", typeof(string));
    
            var imagepathParameter = imagepath != null ?
                new ObjectParameter("imagepath", imagepath) :
                new ObjectParameter("imagepath", typeof(string));
    
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.TimeSpan));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.TimeSpan));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateActivity", activityidParameter, userIDParameter, eventIdParameter, activityNameParameter, locationParameter, startDateParameter, endDateParameter, activityDescriptionParameter, imagepathParameter, starttimeParameter, endtimeParameter, latitudeParameter, longitudeParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> CreateEvent(Nullable<int> eventID, Nullable<int> userID, Nullable<int> category, string eventName, string location, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string eventDescription, string imagepath, string latitude, string longitude, Nullable<System.TimeSpan> starttime, Nullable<System.TimeSpan> endtime, string dealtext, string percentage, string accesstoken)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("eventID", eventID) :
                new ObjectParameter("eventID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var eventDescriptionParameter = eventDescription != null ?
                new ObjectParameter("eventDescription", eventDescription) :
                new ObjectParameter("eventDescription", typeof(string));
    
            var imagepathParameter = imagepath != null ?
                new ObjectParameter("imagepath", imagepath) :
                new ObjectParameter("imagepath", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var starttimeParameter = starttime.HasValue ?
                new ObjectParameter("starttime", starttime) :
                new ObjectParameter("starttime", typeof(System.TimeSpan));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.TimeSpan));
    
            var dealtextParameter = dealtext != null ?
                new ObjectParameter("dealtext", dealtext) :
                new ObjectParameter("dealtext", typeof(string));
    
            var percentageParameter = percentage != null ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateEvent", eventIDParameter, userIDParameter, categoryParameter, eventNameParameter, locationParameter, startDateParameter, endDateParameter, eventDescriptionParameter, imagepathParameter, latitudeParameter, longitudeParameter, starttimeParameter, endtimeParameter, dealtextParameter, percentageParameter, accesstokenParameter);
        }
    
        public virtual int CreateLog(Nullable<int> userID, string message, Nullable<int> templateID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateLog", userIDParameter, messageParameter, templateIDParameter);
        }
    
        public virtual ObjectResult<string> EventList(Nullable<int> userid, Nullable<int> categoryId, string latitude, string longitude, Nullable<int> pageNumber, Nullable<int> pageSize, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EventList", useridParameter, categoryIdParameter, latitudeParameter, longitudeParameter, pageNumberParameter, pageSizeParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<EventListForDetail_Result> EventListForDetail(Nullable<int> userid, Nullable<int> categoryId, string latitude, string longitude, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventListForDetail_Result>("EventListForDetail", useridParameter, categoryIdParameter, latitudeParameter, longitudeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<string> EventUserList(Nullable<int> userid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EventUserList", useridParameter, startdateParameter, enddateParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> FillProfileMissingData(string name, string userName, string email, string password, string userID, string imagePath, Nullable<bool> isBusinessUser, string businessLocation, string bussinesslatitude, string businesslongitude, string accesstoken, string appname)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            var isBusinessUserParameter = isBusinessUser.HasValue ?
                new ObjectParameter("isBusinessUser", isBusinessUser) :
                new ObjectParameter("isBusinessUser", typeof(bool));
    
            var businessLocationParameter = businessLocation != null ?
                new ObjectParameter("businessLocation", businessLocation) :
                new ObjectParameter("businessLocation", typeof(string));
    
            var bussinesslatitudeParameter = bussinesslatitude != null ?
                new ObjectParameter("bussinesslatitude", bussinesslatitude) :
                new ObjectParameter("bussinesslatitude", typeof(string));
    
            var businesslongitudeParameter = businesslongitude != null ?
                new ObjectParameter("businesslongitude", businesslongitude) :
                new ObjectParameter("businesslongitude", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FillProfileMissingData", nameParameter, userNameParameter, emailParameter, passwordParameter, userIDParameter, imagePathParameter, isBusinessUserParameter, businessLocationParameter, bussinesslatitudeParameter, businesslongitudeParameter, accesstokenParameter, appnameParameter);
        }
    
        public virtual ObjectResult<ForgetPassword_Result> ForgetPassword(string countryCode, string phoneno, string email, string password)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ForgetPassword_Result>("ForgetPassword", countryCodeParameter, phonenoParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GenrateOTP(string countryCode, string phoneno, string otp)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GenrateOTP", countryCodeParameter, phonenoParameter, otpParameter);
        }
    
        public virtual ObjectResult<string> GetActivityDetail(Nullable<int> activityId, Nullable<int> eventid, Nullable<int> userid, string accesstoken)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActivityDetail", activityIdParameter, eventidParameter, useridParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> GetCategoryList(Nullable<int> userid, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCategoryList", useridParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> GetChatList(Nullable<int> userID, string accesstoken)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetChatList", userIDParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> GetEventCategoryList(Nullable<int> userid, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEventCategoryList", useridParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<GetEventDatewise_Result> GetEventDatewise(Nullable<int> userid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDatewise_Result>("GetEventDatewise", useridParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<string> GetEventDetail(Nullable<int> eventid, string latitude, string longitude, Nullable<int> userid, string accesstoken)
        {
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEventDetail", eventidParameter, latitudeParameter, longitudeParameter, useridParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<GetEventListLast1hour_Result> GetEventListLast1hour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventListLast1hour_Result>("GetEventListLast1hour");
        }
    
        public virtual int GetEventnearME(Nullable<int> userid, Nullable<int> eventid, string latitude, string longitude, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEventnearME", useridParameter, eventidParameter, latitudeParameter, longitudeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> GetEventStartDateEndDatewise(Nullable<int> userid, Nullable<int> categoryId, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string latitude, string longitude, string accesstoken, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEventStartDateEndDatewise", useridParameter, categoryIdParameter, startdateParameter, enddateParameter, latitudeParameter, longitudeParameter, accesstokenParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetMaxCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetMaxCount");
        }
    
        public virtual ObjectResult<string> GetMyChatList(Nullable<int> userID, string accesstoken)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMyChatList", userIDParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<GetRatingsList_Result> GetRatingsList(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRatingsList_Result>("GetRatingsList", eventIdParameter);
        }
    
        public virtual ObjectResult<string> GroupChatDetail(Nullable<int> userID, Nullable<int> groupID, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<bool> boolval, string accesstoken)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var boolvalParameter = boolval.HasValue ?
                new ObjectParameter("boolval", boolval) :
                new ObjectParameter("boolval", typeof(bool));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GroupChatDetail", userIDParameter, groupIDParameter, pageNumberParameter, pageSizeParameter, boolvalParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> GroupCreate(Nullable<int> userID, Nullable<int> groupid, string groupname, string image, string tagname, string grouptype, string accesstoken)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            var groupnameParameter = groupname != null ?
                new ObjectParameter("groupname", groupname) :
                new ObjectParameter("groupname", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var tagnameParameter = tagname != null ?
                new ObjectParameter("tagname", tagname) :
                new ObjectParameter("tagname", typeof(string));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GroupCreate", userIDParameter, groupidParameter, groupnameParameter, imageParameter, tagnameParameter, grouptypeParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<GroupJoinUserList_Result> GroupJoinUserList(Nullable<int> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupJoinUserList_Result>("GroupJoinUserList", groupidParameter);
        }
    
        public virtual ObjectResult<string> GroupUserList(Nullable<int> userId, Nullable<int> groupid, string accesstoken)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GroupUserList", userIdParameter, groupidParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> InviteGroup(Nullable<int> userID, Nullable<int> groupID, string inviteUserID, string character, string accesstoken)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var inviteUserIDParameter = inviteUserID != null ?
                new ObjectParameter("inviteUserID", inviteUserID) :
                new ObjectParameter("inviteUserID", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InviteGroup", userIDParameter, groupIDParameter, inviteUserIDParameter, characterParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> JoinEventWithUser(Nullable<int> userId, Nullable<int> eventId, string shareGroupType, string character, string chattext, string accesstoken)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var shareGroupTypeParameter = shareGroupType != null ?
                new ObjectParameter("shareGroupType", shareGroupType) :
                new ObjectParameter("shareGroupType", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            var chattextParameter = chattext != null ?
                new ObjectParameter("chattext", chattext) :
                new ObjectParameter("chattext", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("JoinEventWithUser", userIdParameter, eventIdParameter, shareGroupTypeParameter, characterParameter, chattextParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string countryCode, string username, string password, string deviceToken, string deviceType, string mobileContact, string guid, string appname)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("DeviceType", deviceType) :
                new ObjectParameter("DeviceType", typeof(string));
    
            var mobileContactParameter = mobileContact != null ?
                new ObjectParameter("mobileContact", mobileContact) :
                new ObjectParameter("mobileContact", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", countryCodeParameter, usernameParameter, passwordParameter, deviceTokenParameter, deviceTypeParameter, mobileContactParameter, guidParameter, appnameParameter);
        }
    
        public virtual ObjectResult<string> LoginFacebook(string fbID, string emailID, string username, string name, string deviceToken, string deviceType, string imagePath, string guid, string faceBookFriends, Nullable<bool> isLogin, string appname)
        {
            var fbIDParameter = fbID != null ?
                new ObjectParameter("FbID", fbID) :
                new ObjectParameter("FbID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("DeviceType", deviceType) :
                new ObjectParameter("DeviceType", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var faceBookFriendsParameter = faceBookFriends != null ?
                new ObjectParameter("faceBookFriends", faceBookFriends) :
                new ObjectParameter("faceBookFriends", typeof(string));
    
            var isLoginParameter = isLogin.HasValue ?
                new ObjectParameter("isLogin", isLogin) :
                new ObjectParameter("isLogin", typeof(bool));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoginFacebook", fbIDParameter, emailIDParameter, usernameParameter, nameParameter, deviceTokenParameter, deviceTypeParameter, imagePathParameter, guidParameter, faceBookFriendsParameter, isLoginParameter, appnameParameter);
        }
    
        public virtual ObjectResult<string> Logout(Nullable<int> userId, string accesstoken)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Logout", userIdParameter, accesstokenParameter);
        }
    
        public virtual int ManageRatings(Nullable<int> userId, Nullable<int> eventID, Nullable<decimal> ratings, string reviewText)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("eventID", eventID) :
                new ObjectParameter("eventID", typeof(int));
    
            var ratingsParameter = ratings.HasValue ?
                new ObjectParameter("ratings", ratings) :
                new ObjectParameter("ratings", typeof(decimal));
    
            var reviewTextParameter = reviewText != null ?
                new ObjectParameter("reviewText", reviewText) :
                new ObjectParameter("reviewText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ManageRatings", userIdParameter, eventIDParameter, ratingsParameter, reviewTextParameter);
        }
    
        public virtual ObjectResult<MoveData_Result> MoveData(Nullable<int> maxid)
        {
            var maxidParameter = maxid.HasValue ?
                new ObjectParameter("maxid", maxid) :
                new ObjectParameter("maxid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MoveData_Result>("MoveData", maxidParameter);
        }
    
        public virtual ObjectResult<string> MyEvent(Nullable<int> userid, string accesstoken)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MyEvent", useridParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<NewChatPushNotification_Result> NewChatPushNotification(Nullable<int> groupId, Nullable<int> userid)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewChatPushNotification_Result>("NewChatPushNotification", groupIdParameter, useridParameter);
        }
    
        public virtual ObjectResult<string> PendingUserRequestList(Nullable<int> groupid, Nullable<int> userID, string accesstoken)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PendingUserRequestList", groupidParameter, userIDParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<Push_AcceptDecline_Result> Push_AcceptDecline(Nullable<int> groupId, Nullable<int> userid, Nullable<int> adminid)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var adminidParameter = adminid.HasValue ?
                new ObjectParameter("adminid", adminid) :
                new ObjectParameter("adminid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Push_AcceptDecline_Result>("Push_AcceptDecline", groupIdParameter, useridParameter, adminidParameter);
        }
    
        public virtual ObjectResult<Push_AddToCalender_Result> Push_AddToCalender(Nullable<int> eventId, Nullable<int> userId, string grouptype)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Push_AddToCalender_Result>("Push_AddToCalender", eventIdParameter, userIdParameter, grouptypeParameter);
        }
    
        public virtual ObjectResult<Push_joinGroup_Result> Push_joinGroup(Nullable<int> groupId, Nullable<int> userid, string inviteUserID)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var inviteUserIDParameter = inviteUserID != null ?
                new ObjectParameter("inviteUserID", inviteUserID) :
                new ObjectParameter("inviteUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Push_joinGroup_Result>("Push_joinGroup", groupIdParameter, useridParameter, inviteUserIDParameter);
        }
    
        public virtual ObjectResult<Push_NewRequest_Result> Push_NewRequest(Nullable<int> groupId, Nullable<int> userid)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Push_NewRequest_Result>("Push_NewRequest", groupIdParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReGenrateOTP(string countryCode, string phoneno, string otp)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReGenrateOTP", countryCodeParameter, phonenoParameter, otpParameter);
        }
    
        public virtual ObjectResult<RegisterWithPhoneRequest_Result> RegisterWithPhoneRequest(string countryCode, string phoneno, string password, string deviceToken, string deviceType, string guid, string otp, string mobileContact)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var deviceTypeParameter = deviceType != null ?
                new ObjectParameter("DeviceType", deviceType) :
                new ObjectParameter("DeviceType", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var mobileContactParameter = mobileContact != null ?
                new ObjectParameter("mobileContact", mobileContact) :
                new ObjectParameter("mobileContact", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegisterWithPhoneRequest_Result>("RegisterWithPhoneRequest", countryCodeParameter, phonenoParameter, passwordParameter, deviceTokenParameter, deviceTypeParameter, guidParameter, otpParameter, mobileContactParameter);
        }
    
        public virtual ObjectResult<string> RemoveFromGroup(Nullable<int> userId, Nullable<int> groupId, Nullable<bool> isadd, string accesstoken)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var isaddParameter = isadd.HasValue ?
                new ObjectParameter("isadd", isadd) :
                new ObjectParameter("isadd", typeof(bool));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RemoveFromGroup", userIdParameter, groupIdParameter, isaddParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> RemoveUserFromGroup(Nullable<int> userId, Nullable<int> groupId, Nullable<int> removeUserId, string accesstoken)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var removeUserIdParameter = removeUserId.HasValue ?
                new ObjectParameter("removeUserId", removeUserId) :
                new ObjectParameter("removeUserId", typeof(int));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RemoveUserFromGroup", userIdParameter, groupIdParameter, removeUserIdParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> SendMessage(Nullable<int> groupId, Nullable<int> userId, string chattext, string accesstoken)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var chattextParameter = chattext != null ?
                new ObjectParameter("chattext", chattext) :
                new ObjectParameter("chattext", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SendMessage", groupIdParameter, userIdParameter, chattextParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> SerchEvent(Nullable<int> userid, string eventName, string accesstoken, string latitude, string longitude, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("eventName", eventName) :
                new ObjectParameter("eventName", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SerchEvent", useridParameter, eventNameParameter, accesstokenParameter, latitudeParameter, longitudeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ShareEvent_Result> ShareEvent(Nullable<int> eventid, Nullable<int> userid, string grouptype)
        {
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var grouptypeParameter = grouptype != null ?
                new ObjectParameter("grouptype", grouptype) :
                new ObjectParameter("grouptype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShareEvent_Result>("ShareEvent", eventidParameter, useridParameter, grouptypeParameter);
        }
    
        public virtual ObjectResult<string> SP_UpdateProfile(string name, string userName, string email, string userID, string imagePath, string groupPeople, string groupType, string password, string accesstoken)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            var groupPeopleParameter = groupPeople != null ?
                new ObjectParameter("groupPeople", groupPeople) :
                new ObjectParameter("groupPeople", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("groupType", groupType) :
                new ObjectParameter("groupType", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var accesstokenParameter = accesstoken != null ?
                new ObjectParameter("accesstoken", accesstoken) :
                new ObjectParameter("accesstoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UpdateProfile", nameParameter, userNameParameter, emailParameter, userIDParameter, imagePathParameter, groupPeopleParameter, groupTypeParameter, passwordParameter, accesstokenParameter);
        }
    
        public virtual ObjectResult<string> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SplitString", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<string> VerifyOTP(string oTP, string password)
        {
            var oTPParameter = oTP != null ?
                new ObjectParameter("OTP", oTP) :
                new ObjectParameter("OTP", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VerifyOTP", oTPParameter, passwordParameter);
        }
    
        public virtual int GetEventListBySearch(Nullable<int> mainCategoryId, string keyword, Nullable<int> pageNumber, Nullable<int> pageSize, string sort)
        {
            var mainCategoryIdParameter = mainCategoryId.HasValue ?
                new ObjectParameter("MainCategoryId", mainCategoryId) :
                new ObjectParameter("MainCategoryId", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEventListBySearch", mainCategoryIdParameter, keywordParameter, pageNumberParameter, pageSizeParameter, sortParameter);
        }
    
        public virtual ObjectResult<GetHeaderEvent_Result> GetHeaderEvent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHeaderEvent_Result>("GetHeaderEvent");
        }
    
        public virtual ObjectResult<GetTenLatestEventList_Result> GetTenLatestEventList(Nullable<int> mainCategoryId, string keyword, Nullable<System.DateTime> startdate)
        {
            var mainCategoryIdParameter = mainCategoryId.HasValue ?
                new ObjectParameter("MainCategoryId", mainCategoryId) :
                new ObjectParameter("MainCategoryId", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTenLatestEventList_Result>("GetTenLatestEventList", mainCategoryIdParameter, keywordParameter, startdateParameter);
        }
    
        public virtual ObjectResult<GetEventDetailsById_Result> GetEventDetailsById(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDetailsById_Result>("GetEventDetailsById", eventIDParameter);
        }
    
        public virtual ObjectResult<GetAllNewEvents_Result> GetAllNewEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllNewEvents_Result>("GetAllNewEvents");
        }
    }
}
